{"version":3,"sources":["components/header/HeaderView.js","components/header/HeaderContainer.js","utils/helper.js","utils/localization.js","components/campaign/CampaignView.js","components/modal/Modal.js","utils/constants.js","utils/data.js","components/campaign/CampaignContainer.js","components/CampaignApp.js","serviceWorker.js","index.js","components/campaign/Campaign.module.scss","components/header/Header.module.scss"],"names":["HeaderView","props","className","styles","logo","src","alt","onChange","e","handleLanguageChange","value","HeaderContainer","state","language","preventDefault","lang","target","this","setState","prevState","getLanguage","Component","formatDate","date","getUTCMonth","getUTCFullYear","getUTCDate","getDays","givenDateMs","todayTime","Date","getTime","diffTime","Math","abs","ceil","localizedStrings","en","viewPricing","report","scheduleAgain","daysAhead","daysAgo","campaign","view","actions","upcoming","live","past","manageCampaigns","gm","strings","LocalizedStrings","CampaignView","setLanguage","data","toggleModal","toggleDateModal","campaignWrrapper","campaignHead","campaignRowEle","campaignBody","map","index","campaignRow","key","createdOn","daysFormattedSuffix","image_url","campaignEle","name","region","onClick","actionsEle","length","Modal","Fragment","isOpen","onClose","body","CAMPAIGN_ID","type","CampaignContainer","activeCampaignId","originalData","isPricingModalOpen","pricingData","isDateModalOpen","selectedCampaign","selectedDate","isReschedulingDone","filteredData","currentTime","constants","filter","ele","prevProps","selectCampaign","navElementClass","campaignNavEle","pricingWrapper","pricingHead","pricingName","price","pricingValue","selected","startDate","handleDateChange","inline","showYearDropdown","rescheduleData","id","renderModalBody","renderDateModalBody","renderCampaignHeader","campaignId","CampaignApp","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.56a8b150.chunk.js","sourcesContent":["import React from \"react\";\n\nimport styles from './Header.module.scss'\n\nfunction HeaderView(props) {\n  return (\n    <header>\n    \t<div className=\"container\">\n\t    \t<div className={styles.logo}>\n\t    \t\t<img src=\"../images/logo.png\" alt=\"logo\"/>\n\t    \t</div>\n\t    \t\n    \t\n    \t<div>\n        Language: <select onChange={(e) => props.handleLanguageChange(e)}>\n          <option value=\"en\">En- English</option>\n          <option value=\"gm\">Gm- German</option>\n        </select>\n        \n      </div>\n      </div>\n    </header>\n  );\n}\n\nexport default HeaderView;\n","import React, { Component } from \"react\";\n\nimport HeaderView from './HeaderView'\n\nclass HeaderContainer extends Component {\n  state = {\n    language: 'en'\n  }\n  handleLanguageChange(e) {\n    e.preventDefault();\n    let lang = e.target.value;\n    this.setState(prevState => ({\n      language: lang\n    }), () => {\n      this.props.getLanguage(lang);\n    })\n  }\n  render() {\n    return (\n      <HeaderView \n      handleLanguageChange={(e) => this.handleLanguageChange(e)}\n    />\n    );\n  }\n}\n\nexport default HeaderContainer;\n","export const formatDate = function(date) {\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n  ];\n\n  return `${months[date.getUTCMonth()]} ${date.getUTCFullYear()}, ${date.getUTCDate()}`;\n}\n\nexport const getDays = function(givenDateMs) {\n  const todayDate = new Date();\n  const todayTime = todayDate.getTime();\n  const diffTime = Math.abs(givenDateMs - todayTime);\n  const diffDate = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  return diffDate;\n}\n","export const localizedStrings = {\n  en: {\n    viewPricing: \"View Pricing\",\n    report: \"Report\",\n    scheduleAgain: \"Schedule Again\",\n    daysAhead: \"days ahead\",\n    daysAgo: \"days ago\",\n    date: \"DATE\",\n    campaign: \"CAMPAIGN\",\n    view: \"VIEW\",\n    actions: \"ACTIONS\",\n    upcoming: \"Upcomging Campaigns\",\n    live: \"Live Campaigns\",\n    past: \"Past Campaigns\",\n    manageCampaigns: \"Manage Campaigns\"\n  },\n  gm: {\n    viewPricing: \"Preise anzeigen\",\n    report: \"Bericht\",\n    scheduleAgain: \"Erneut planen\",\n    daysAhead: \"tage voraus\",\n    daysAgo: \"vor tagen\",\n    date: \"DATUM\",\n    campaign: \"KAMPAGNE\",\n    view: \"AUSSICHT\",\n    actions: \"AKTIONEN\",\n    upcoming: \"Kommende Kampagnen\",\n    live: \"Live-Kampagnen\",\n    past: \"Vergangene Kampagnen\",\n    manageCampaigns: \"Kampagnen verwalten\"\n  }\n};\n","import React from \"react\";\nimport LocalizedStrings from 'react-localization';\n\nimport { formatDate, getDays } from '../../utils/helper.js';\nimport { localizedStrings } from '../../utils/localization.js';\nimport styles from './Campaign.module.scss';\n\nlet strings = new LocalizedStrings(localizedStrings)\n\nfunction CampaignView(props) {\n  strings.setLanguage(props.language);\n  const { data, toggleModal, toggleDateModal } = props;\n  return (\n    <div className={styles.campaignWrrapper}>\n    <div className={styles.campaignHead}>\n      <div className={`${styles.campaignRowEle} ${styles.date}`}>\n        {strings.date}\n      </div>\n      <div className={`${styles.campaignRowEle} ${styles.campaign}`}>\n        {strings.campaign}\n      </div>\n      <div className={`${styles.campaignRowEle} ${styles.view}`}>\n        {strings.view}\n      </div>\n      <div className={`${styles.campaignRowEle} ${styles.actions}`}>\n        {strings.actions}\n      </div>\n    </div>\n    <div className={styles.campaignBody}>\n      {\n        data && data.map((campaign, index) => {\n          return (\n            <div className={styles.campaignRow} key={index}>\n              <div className={`${styles.campaignRowEle} ${styles.date}`}>\n                {\n                  formatDate(new Date(campaign.createdOn))\n                }\n                <div className=\"fs-14 italic text-blue-light\">\n                  {\n                    campaign.daysFormattedSuffix && `${getDays(campaign.createdOn)} ${strings[campaign.daysFormattedSuffix]}`\n                  }\n                </div>\n              </div>\n              <div className={`${styles.campaignRowEle} ${styles.campaign} flex-row `}>\n                  <img src={campaign.image_url} alt=\"campaign\"/> \n                  <div className={`${styles.campaignEle}`}>\n                    {campaign.name}\n                    <span className=\"fs-14 italic text-blue-light\">{campaign.region}</span>\n                  </div>\n              </div>\n              <div className={`${styles.campaignRowEle} ${styles.view} fs-14 flex-row pointer`} onClick={() => toggleModal(campaign)}>\n                <img src=\"../../images/Price.png\" alt=\"price\"/> {strings.viewPricing}\n              </div>\n              <div className={`${styles.campaignRowEle} ${styles.actions}`}>\n                <div className={`${styles.actionsEle}`}>\n                  <img src=\"../../images/file.png\" alt=\"file\"/> <span className=\"desktop-only\">CSV</span>\n                </div>\n                <div className={`${styles.actionsEle}`}>\n                  <img src=\"../../images/statistics-report.png\" alt=\"statistics\"/> <span className=\"desktop-only\">{strings.report}</span>\n                </div>\n                <div className={`${styles.actionsEle} pointer`} onClick={() => toggleDateModal(campaign)}>\n                  \n                  <img src=\"../../images/calendar.png\" alt=\"calendar\"/> <span className=\"desktop-only\">{strings.scheduleAgain}</span>\n                </div>\n              </div>\n              <div className=\"line-light\" />\n            </div>\n          )\n        })\n      }\n      {\n        data.length === 0 &&\n        <div className={styles.campaignRow}>No campaigns to show</div>\n      }\n    </div>\n   </div>\n  );\n}\n\nexport default CampaignView;\n","import React from 'react';\n\nimport './modal.scss';\n\nfunction Modal(props) {\n  return (\n    <React.Fragment>\n  \t  {\n  \t  \tprops.isOpen ?\n  \t  \t<div className=\"modal\">\n  \t  \t\t<div className=\"modal-overlay\" onClick={props.onClose}></div>\n  \t  \t\t<div className=\"modal-wrapper\">\n  \t  \t\t\t<div className=\"modal-body\">{props.body}</div>\n  \t  \t\t</div>\n  \t  \t</div> : null\n  \t  }\n    </React.Fragment>\n  );\n}\n\nexport default Modal;\n","export const CAMPAIGN_ID = {\n\tupcoming: 1,\n\tlive: 2,\n\tpast: 3\n}","export const data = [{\n    \"id\":1,\n    \"name\": \"Test Whatsapp\",\n    \"region\": \"US\",\n    \"createdOn\": 1559807714999,\n    \"price\": [{\n        type: '1 Week - 1 Month',\n        value: '$ 100.00'\n      },\n      {\n        type: '6 Months',\n        value: '$ 320.00'\n      },\n      {\n        type: '1 Year',\n        value: '$ 900.00'\n      }\n    ],\n    \"csv\": \"Some CSV link for Whatsapp\",\n    \"report\": \"Some report link for Whatsapp\",\n    \"image_url\": \"../../images/80.png\"\n  },\n  {\n    \"id\":2,\n    \"name\": \"Super Jewels Quest\",\n    \"region\": \"CA, FR\",\n    \"createdOn\": 1576089000000,\n    \"price\": [{\n        type: '1 Week - 1 Month',\n        value: '$ 100.00'\n      },\n      {\n        type: '6 Months',\n        value: '$ 500.00'\n      },\n      {\n        type: '1 Year',\n        value: '$ 50.00'\n      }\n    ],\n    \"csv\": \"Some CSV link for Super Jewels Quest\",\n    \"report\": \"Some report link for Super Jewels Ques\",\n    \"image_url\": \"../../images/80.png\"\n  },\n  {\n    \"id\":3,\n    \"name\": \"Mole Slayer\",\n    \"region\": \"FR\",\n    \"createdOn\": 1551007714999,\n    \"price\": [{\n        type: '1 Week - 1 Month',\n        value: '$ 42.00'\n      },\n      {\n        type: '6 Months',\n        value: '$ 500.00'\n      },\n      {\n        type: '1 Year',\n        value: '$ 900.00'\n      }\n    ],\n    \"csv\": \"Some CSV link for Mole Slayer\",\n    \"report\": \"Some report link for Mole Slayer\",\n    \"image_url\": \"../../images/80.png\"\n  },\n  {\n    \"id\":4,\n    \"name\": \"Mancala Mix\",\n    \"region\": \"JP\",\n    \"createdOn\": 1572641010572,\n    \"price\": [{\n        type: '1 Week - 1 Month',\n        value: '$ 100.00'\n      },\n      {\n        type: '6 Months',\n        value: '$ 32.00'\n      },\n      {\n        type: '1 Year',\n        value: '$ 900.00'\n      }\n    ],\n    \"csv\": \"Some CSV link for Mancala Mix\",\n    \"report\": \"Some report link for Mancala Mix\",\n    \"image_url\": \"../../images/80-2.png\"\n  },\n  {\n    \"id\":5,\n    \"name\": \"Mancala Mix\",\n    \"region\": \"JP\",\n    \"createdOn\": 1572641013948,\n    \"price\": [{\n        type: '1 Week - 1 Month',\n        value: '$ 100.00'\n      },\n      {\n        type: '6 Months',\n        value: '$ 56.00'\n      },\n      {\n        type: '1 Year',\n        value: '$ 221.00'\n      }\n    ],\n    \"csv\": \"Some CSV link for Mancala Mix\",\n    \"report\": \"Some report link for Mancala Mix\",\n    \"image_url\": \"../../images/80-2.png\"\n  },\n  {\n    \"id\":6,\n    \"name\": \"Mancala Mix\",\n    \"region\": \"JP\",\n    \"createdOn\": 1559809999999,\n    \"price\": [{\n        type: '1 Week - 1 Month',\n        value: '$ 38.00'\n      },\n      {\n        type: '6 Months',\n        value: '$ 500.00'\n      },\n      {\n        type: '1 Year',\n        value: '$ 75.00'\n      }\n    ],\n    \"csv\": \"Some CSV link for Mancala Mix\",\n    \"report\": \"Some report link for Mancala Mix\",\n    \"image_url\": \"../../images/80-2.png\"\n  }\n]\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport LocalizedStrings from 'react-localization';\n\nimport CampaignView from './CampaignView';\nimport Modal from '../modal/Modal';\nimport * as constants from '../../utils/constants.js';\nimport { data } from '../../utils/data.js';\nimport { localizedStrings } from '../../utils/localization.js';\nimport styles from './Campaign.module.scss';\n\nlet strings = new LocalizedStrings(localizedStrings)\n\nclass CampaignContainer extends Component {\n\n  // Ids would be like\n  //   1 -> upcoming\n  //   2 -> Live\n  //   3 -> Past\n  state = {\n    activeCampaignId: 1,\n    originalData: data,\n    data: [],\n    isPricingModalOpen: false,\n    pricingData: {},\n    isDateModalOpen: false,\n    selectedCampaign: {},\n    selectedDate: new Date(),\n    isReschedulingDone: false\n  }\n\n  selectCampaign(activeCampaignId) {\n    let filteredData = [];\n    const { originalData } = this.state;\n    const currentTime = new Date().getTime();\n    switch (activeCampaignId) {\n      case constants.CAMPAIGN_ID.upcoming:\n        filteredData = originalData.filter((ele) => {\n          if (currentTime < ele.createdOn) {\n            ele.daysFormattedSuffix = 'daysAhead'\n            return ele\n          }\n          return false\n        })\n\n        break;\n      case constants.CAMPAIGN_ID.live:\n        filteredData = originalData.filter((ele) => {\n          // check for 1 day diff\n          if (Math.abs(currentTime - ele.createdOn) < 86400000) {\n            return true\n          }\n          return false\n        })\n        filteredData.daysFormattedSuffix = null;\n        break;\n      case constants.CAMPAIGN_ID.past:\n        filteredData = originalData.filter((ele) => {\n          if (currentTime > ele.createdOn && currentTime - ele.createdOn > 86400000) {\n            ele.daysFormattedSuffix = 'daysAgo'\n            return ele\n          }\n          return false\n        })\n        break;\n      default :\n        return null\n    }\n    this.setState(prevState => ({\n      activeCampaignId,\n      data: filteredData\n    }))\n  }\n\n  componentDidMount() {\n    const currentTime = new Date().getTime();\n    const filteredData = this.state.originalData.filter((ele) => {\n      if (currentTime < ele.createdOn) {\n        ele.daysFormattedSuffix = 'daysAhead'\n        return ele\n      }\n      return false\n    })\n\n    strings.setLanguage(this.props.language);\n\n    this.setState(prevState => ({\n      data: filteredData\n    }))\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isReschedulingDone } = this.state;\n    if (isReschedulingDone !== prevState.isReschedulingDone) {\n      this.selectCampaign(this.state.activeCampaignId);\n      this.setState(prevState => ({\n        isReschedulingDone: false\n      }))\n    }\n  }\n\n  // render Campaign navbar list - (upcoming. padst and present)\n  renderCampaignHeader() {\n    const navElementClass = `fs-18 text-blue-dark pointer ${styles.campaignNavEle}`;\n    const { activeCampaignId } = this.state;\n    strings.setLanguage(this.props.language);\n    return (\n      <React.Fragment>\n        <h1 className=\"fs-44\">{strings.manageCampaigns}</h1>\n        <div className=\"d-flex justify-start relative expand\">\n          <div \n            className={activeCampaignId ===  constants.CAMPAIGN_ID.upcoming ? `${navElementClass} active` : `${navElementClass}`}\n            onClick={() => this.selectCampaign(constants.CAMPAIGN_ID.upcoming)}\n          >\n            {strings.upcoming}\n          </div>\n          <div \n            className={activeCampaignId ===  constants.CAMPAIGN_ID.live ? `${navElementClass} active` : `${navElementClass}`}\n            onClick={() => this.selectCampaign(constants.CAMPAIGN_ID.live)}\n          >\n            {strings.live}\n          </div>\n          <div \n            className={activeCampaignId ===  constants.CAMPAIGN_ID.past ? `${navElementClass} active` : `${navElementClass}`}\n            onClick={() => this.selectCampaign(constants.CAMPAIGN_ID.past)}\n          >\n            {strings.past}\n          </div>\n          <div className=\"line-light\" />\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  // Modal operations\n\n  toggleModal(data = {}) {\n    this.setState(prevState => ({\n      isPricingModalOpen: !this.state.isPricingModalOpen,\n      pricingData: data\n    }))\n  }\n\n  renderModalBody() {\n    const { pricingData } = this.state\n\n    return (\n      <div className={styles.pricingWrapper}>\n        <div className={styles.pricingHead}>\n          <img src={pricingData.image_url} alt=\"price\"/>\n          <div className={styles.pricingName}>\n            {pricingData.name}\n            <span className=\"text-blue-light\"> {pricingData.region} </span>\n          </div>\n          \n        </div>\n        <h2 className=\"d-flex justify-start\">\n          Pricing\n        </h2>\n        {\n          pricingData.price && pricingData.price.map((price, index) => {\n            return(\n              <div className={styles.pricingValue} key={`${index}-price`}>\n                <span className=\"text-blue-light\">\n                  {price.type}\n                </span>\n                <span className=\"text-blue-dark w-600\">\n                  {price.value}\n                </span>\n              </div>\n            )\n          })\n        }\n        <div className=\"btn btn-pri mt-2\" onClick={() => this.toggleModal()}>Close</div>\n      </div>\n    )\n  }\n\n  // date modal\n  toggleDateModal(data = {}) {\n    this.setState(prevState => ({\n      isDateModalOpen: !this.state.isDateModalOpen,\n      selectedCampaign: data\n    }))\n  }\n\n  renderDateModalBody(campaign = {}) {\n    return (\n      <DatePicker\n        selected={this.state.selectedDate}\n        startDate={new Date(this.state.selectedCampaign.createdOn)}\n        onChange={date => this.handleDateChange(date)}\n        inline\n        showYearDropdown\n      />\n    )\n  }\n\n  handleDateChange(date) {\n    const rescheduleData = this.state.originalData.map((ele) => {\n      if (this.state.selectedCampaign.id === ele.id) {\n        ele.createdOn = date.getTime();\n      }\n      return ele\n    })\n    this.setState(prevState => ({\n      selectedDate: date,\n      originalData: rescheduleData,\n      isReschedulingDone: true\n    }), () => {\n      this.toggleDateModal()\n    })\n  }\n\n  render() {\n    const { activeCampaignId, data, isPricingModalOpen, isDateModalOpen } = this.state;\n    const { language } = this.props;\n    return (\n      <div className=\"d-flex justify-center pd-top-80\">\n        <Modal\n          isOpen={isPricingModalOpen}\n          onClose={() => this.toggleModal()}\n          body={this.renderModalBody()}\n        />\n        <Modal\n          isOpen={isDateModalOpen}\n          onClose={() => this.toggleDateModal()}\n          body={this.renderDateModalBody()}\n        />\n        <div className=\"container flex-column align-start\">\n          {this.renderCampaignHeader()}\n          <CampaignView \n            campaignId={activeCampaignId}\n            data={data}\n            toggleModal={(e, data) => this.toggleModal(e, data)}\n            toggleDateModal={(e, data) => this.toggleDateModal(e, data)}\n            language={language}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CampaignContainer;\n","import React, { Component } from \"react\";\n\nimport HeaderContainer from './header/HeaderContainer';\nimport CampaignContainer from './campaign/CampaignContainer';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass CampaignApp extends Component {\n  state = {\n    language: 'en'\n  }\n\n  getLanguage(language){\n    this.setState((prevState) => ({\n      language\n    }))\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <HeaderContainer getLanguage={(language) => this.getLanguage(language)}/>\n        <CampaignContainer language={this.state.language}/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CampaignApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport CampaignApp from './components/CampaignApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<CampaignApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"campaignNavEle\":\"Campaign_campaignNavEle__1foHI\",\"campaignWrrapper\":\"Campaign_campaignWrrapper__1cCMu\",\"campaignHead\":\"Campaign_campaignHead__h5Hox\",\"campaignRow\":\"Campaign_campaignRow__1EXpR\",\"campaignRowEle\":\"Campaign_campaignRowEle__18FqD\",\"date\":\"Campaign_date__3Y0tj\",\"campaign\":\"Campaign_campaign__Cfodr\",\"campaignEle\":\"Campaign_campaignEle__vxeXy\",\"view\":\"Campaign_view__2oEKN\",\"actions\":\"Campaign_actions__3ZytN\",\"actionsEle\":\"Campaign_actionsEle__3iaP7\",\"campaignBody\":\"Campaign_campaignBody__2YzF7\",\"pricingWrapper\":\"Campaign_pricingWrapper__36WSV\",\"pricingHead\":\"Campaign_pricingHead__16DHY\",\"pricingName\":\"Campaign_pricingName__3rDpH\",\"pricingValue\":\"Campaign_pricingValue__25XLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__2gAbO\"};"],"sourceRoot":""}